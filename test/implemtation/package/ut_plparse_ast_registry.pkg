CREATE OR REPLACE PACKAGE ut_plparse_ast_registry AS
    
    --%suitepath(plparse)
    --%suite(plparse_AST_Registry)

    --%beforeeach
    PROCEDURE before_each;

    --%test(register registers)
    PROCEDURE registerRegisters;

    --%test(unregister unregisters)
    --%throws(-1403)
    PROCEDURE unregisterUnregisters;

END;
/
CREATE OR REPLACE PACKAGE BODY ut_plparse_ast_registry AS

    ----------------------------------------------------------------------------  
    PROCEDURE before_each IS
    BEGIN
        plparse_ast_registry.initialize;
    END;

    ----------------------------------------------------------------------------  
    PROCEDURE registerRegisters IS
        l_ast      plparse_ast;
        l_otherAst plparse_ast;
    BEGIN
        -- Test
        l_ast := plparse_ast(plex_token(plex.tk_Asterix));
        --
        -- Expectations
        ut.expect(l_ast.id_registry).to_be_null();
        --
        -- Continue Test
        plparse_ast_registry.register(l_ast);
        --
        -- Expectations
        ut.expect(l_ast.token.tokenType).to_equal(plex.tk_Asterix);
        ut.expect(l_ast.id_registry).to_be_not_null();
        --
        -- Continue Test
        l_otherAst := plparse_ast_registry.get_by_id(l_ast.id_registry);
        --
        -- Expectations
        ut.expect(l_ast.token.tokenType).to_equal(l_otherAst.token.tokenType);
    END;

    ----------------------------------------------------------------------------  
    PROCEDURE unregisterUnregisters IS
        l_ast1   plparse_ast;
        l_id1    INTEGER;
        l_ast2   plparse_ast;
        l_id2    INTEGER;
        someAST  plparse_ast;
    BEGIN
        -- prepare
        -- register 2 ASTs
        l_ast1 := plparse_ast(plex_token(plex.tk_Asterix));
        plparse_ast_registry.register(l_ast1);
        l_id1  := l_ast1.id_registry;
        l_ast2 := plparse_ast(plex_token(plex.tk_LessThan));
        plparse_ast_registry.register(l_ast2);
        l_id2 := l_ast2.id_registry;
        -- test - unregister 1st
        plparse_ast_registry.unregister(l_ast1);
        --
        -- Expectations
        ut.expect(l_ast1.id_registry).to_be_null();
        -- test assert
        someAST  := plparse_ast_registry.get_by_id(l_id1);
        -- get by id on unregistered AST should have thrown
    END;


END;
/
